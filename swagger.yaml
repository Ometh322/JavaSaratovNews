---
swagger: "2.0"
info:
  description: This is a API of SaratovNews
  version: 1.0.0
  title: Simple API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /Ometh322/SararovNews/1.0.0
tags:
- name: news
  description: News in news feed
- name: events
  description: Events in news feed
- name: polls
  description: Polls in news feed
- name: newsFeed
  description: All News Feed
schemes:
- https
- http
paths:
  /newsFeed:
    get:
      tags:
      - newsFeed
      summary: List of All News, Events, Polls in News Feed
      operationId: listNewsFeed
      produces:
      - application/json
      - application/xml
      parameters:
      - name: numberOfObject
        in: query
        description: Number of Outputing Objects
        required: false
        type: integer
      - name: startIndex
        in: query
        description: Index of First Object, that need to be Outputed
        required: false
        type: integer
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Record'
        "404":
          description: News Feed not found
  /news:
    get:
      tags:
      - news
      summary: List All News
      description: Returns the whole News
      operationId: listNews
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/News'
        "404":
          description: News not found
    put:
      tags:
      - news
      summary: Adds a new News post
      operationId: addNews
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: News object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/News'
      responses:
        "201":
          description: Successful creating
          schema:
            $ref: '#/definitions/News'
        "405":
          description: Invalid Input
  /news/{id}:
    get:
      tags:
      - news
      summary: Find News by ID
      description: Returns a single News
      operationId: getNewsById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of News to return
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/News'
        "400":
          description: Invalid ID supplied
        "404":
          description: News not found
    post:
      tags:
      - news
      summary: Update news by ID
      operationId: updateNews
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of News that need to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: News object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/News'
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: News not found
        "405":
          description: Validation exception
    delete:
      tags:
      - news
      summary: Deletes a News post
      operationId: deleteNews
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: News ID to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: News not found
  /events:
    get:
      tags:
      - events
      summary: List All Events
      description: Returns the whole Events
      operationId: listEvents
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Events'
        "404":
          description: Events not found
    put:
      tags:
      - events
      summary: Adds a new Events post
      operationId: addEvent
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Events object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Events'
      responses:
        "201":
          description: Successful creating
          schema:
            $ref: '#/definitions/Events'
        "405":
          description: Invalid Input
  /events/{id}:
    get:
      tags:
      - events
      summary: Find Event by ID
      description: Returns a singleEvent
      operationId: getEventById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of Event to return
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Events'
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found
    post:
      tags:
      - events
      summary: Update events by ID
      operationId: updateEvents
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of Events that need to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Events object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Events'
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found
        "405":
          description: Validation exception
    delete:
      tags:
      - events
      summary: Deletes a Event post
      operationId: deleteEvent
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: Event ID to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Event not found
  /polls:
    get:
      tags:
      - polls
      summary: List All Polls
      description: Returns the whole Polls
      operationId: listPolls
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Polls'
        "404":
          description: Polls not found
    put:
      tags:
      - polls
      summary: Adds a new Poll post
      operationId: addPoll
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Poll object that needs to be added
        required: true
        schema:
          $ref: '#/definitions/Polls'
      responses:
        "201":
          description: Successful creating
          schema:
            $ref: '#/definitions/Polls'
        "405":
          description: Invalid Input
  /polls/{id}:
    get:
      tags:
      - polls
      summary: Find Poll by ID
      description: Returns a singlePoll
      operationId: getPollById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of Poll to return
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/Polls'
        "400":
          description: Invalid ID supplied
        "404":
          description: Poll not found
    post:
      tags:
      - polls
      summary: Update poll by ID
      operationId: updatePoll
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: ID of Poll that need to be updated
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: Polls object that needs to be updated
        required: true
        schema:
          $ref: '#/definitions/Polls'
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Poll not found
        "405":
          description: Validation exception
    delete:
      tags:
      - polls
      summary: Deletes a Poll post
      operationId: deletePoll
      produces:
      - application/json
      - application/xml
      parameters:
      - name: id
        in: path
        description: Poll ID to delete
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Poll not found
definitions:
  News:
    allOf:
    - $ref: '#/definitions/Record'
    - {}
  Events:
    allOf:
    - $ref: '#/definitions/Record'
    - properties:
        srartDate:
          type: string
          format: date-time
  Polls:
    allOf:
    - $ref: '#/definitions/Record'
    - properties:
        answerOptions:
          type: array
          items:
            type: string
        selectedAnswer:
          type: integer
          format: int64
  Comments:
    type: object
    properties:
      id:
        type: integer
        format: int64
      creatorId:
        type: integer
        format: int64
      message:
        type: string
      publicationDate:
        type: string
        format: date-time
      numberOfLikes:
        type: integer
        format: int32
  Record:
    type: object
    properties:
      id:
        type: integer
        format: int64
      creatorId:
        type: integer
        format: int64
      title:
        type: string
      publicationDate:
        type: string
        format: date-time
      description:
        type: string
      numberOfComments:
        type: integer
        format: int32
      numberOfLikes:
        type: integer
        format: int32
      comments:
        type: array
        items:
          $ref: '#/definitions/Comments'
      typeOfRecord:
        type: string
        enum:
        - NEWS
        - EVENT
        - POLL
  ApiResponce:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
